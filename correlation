

BiocManager::install("Hmisc")
library("Hmisc")



If transpose required then transpose the table by:
transposed_df <- data.frame(t(as.matrix(BRCA)))
write.table(transposed_df, file = "transpose_BRCA.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
 or
awk '
{
    for (i=1; i<=NF; i++)  {
        a[NR,i] = $i
    }
}
NF>p { p = NF }
END {
    for(i=1; i<=p; i++) {
        for(j=1; j<=NR; j++) {
            printf "%s%s", a[j,i], (j==NR ? "\n" : "\t")
        }
    }
}
' yourfile.txt > transposed.txt




  
cor_data = cor(transposed_df) #input file if gene to gene correlation then keep gene in column.


p_values <- rcorr(as.matrix(transposed_df))
print(p_values)

pattern <- "LUCAT1"
matching_columns <- grep(pattern, colnames(cor_data), value = TRUE)
selected_columns_data_frame <- cor_data[, matching_columns]
selected_columns_data_frame
write.table(selected_columns_data_frame, file = "selected_columns_data_frame.txt", sep = "\t", row.names = TRUE, col.names = TRUE)


write.table(cor_data, file = "cor_data_gene.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
or
write.csv(transposed_df, "BRCA_transpose.csv", row.names=FALSE, quote=FALSE)

Visualize a Correlation Matrix in R
install.packages("corrplot")
library("corrplot")


library(corrplot)
 
head(mtcars)

M<-cor(mtcars)
head(round(M,2))
 

corrplot(M, method="circle")
 

corrplot(M, method="pie")
 

corrplot(M, method="color")
 

corrplot(M, method="number")

corrplot(correlation_matrix, method="ellipse")

corrplot(M, method="shade")

