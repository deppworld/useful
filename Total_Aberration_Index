


library(TCGAbiolinks)
query.maskCNV.hg39.BRCA <- GDCquery(project = "TCGA-BRCA",
                                    data.category = "Copy Number Variation",
                                    data.type = "Masked Copy Number Segment") #, legacy=FALSE)
GDCdownload(query = query.maskCNV.hg39.BRCA, method = "api", files.per.chunk = 1)
maskCNV.BRCA <- GDCprepare(query = query.maskCNV.hg39.BRCA, summarizedExperiment = FALSE)
maskCNV.BRCA <- data.frame(maskCNV.BRCA, stringsAsFactors = FALSE)
library(CINmetrics)

tai.test <- tai(cnvData = maskCNV.BRCA)

head(tai.test)


modified.tai.test <- taiModified(cnvData = maskCNV_BRCA)
head(modified.tai.test)

cna.test <- cna(cnvData = maskCNV_BRCA)
head(cna.test)


base.seg.test <- countingBaseSegments(cnvData = maskCNV_BRCA)
head(base.seg.test)



break.points.test <- countingBreakPoints(cnvData = maskCNV_BRCA)
head(break.points.test)


fraction.genome.test <- fga(cnvData = maskCNV_BRCA)
head(fraction.genome.test)


cinmetrics.test <- CINmetrics(cnvData = maskCNV_BRCA)
head(cinmetrics.test)

write.csv(maskCNV_BRCA, file = "maskCNV_BRCA.csv")
write.csv(tai.test, file = "tai.test.csv")
write.csv(modified.tai.test, file = "modified.tai.test.csv")
write.csv(cna.test, file = "cna.test.csv")
write.csv(base.seg.test, file = "base.seg.test.csv")
write.csv(break.points.test, file = "break.points.test.csv")
write.csv(fraction.genome.test, file = "fraction.genome.test")
write.csv(cinmetrics.test, file = "cinmetrics.test")

#####
library(CINmetrics)
library(TCGAbiolinks)
library(tidyverse)
library(ggpubr)
library(corrplot)
library(ComplexHeatmap)
library(circlize)
library(cowplot)
library(grid)
library(gridExtra)

figure1 <- cinmetrics.data %>% mutate(value = log10(value)) %>% 
  ggstripchart(., x = "cinmetric",
               y = "value",
               combine = TRUE,
               #merge = TRUE,
               ylab = "",
               xlab = "",
               color = "type", 
               size = 0.5,
               fill = "type",
               font.label = c(10, "bold", "black"),
               #shape = "type",
               palette = "simpsons",
               alpha = 0.5,
               add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"), 
               orientation = "horiz",
               order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
               position = position_jitterdodge() 
  ) + font("xy.text", size = 10, color = "black", face = "bold")
