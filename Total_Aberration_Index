
https://cran.r-project.org/web/packages/CINmetrics/index.html
https://github.com/lasseignelab/CINmetrics/blob/main/vignettes/Manuscript_figures.Rmd

library(TCGAbiolinks)
query.maskCNV.hg39.BRCA <- GDCquery(project = "TCGA-BRCA",
                                    data.category = "Copy Number Variation",
                                    data.type = "Masked Copy Number Segment") #, legacy=FALSE)
GDCdownload(query = query.maskCNV.hg39.BRCA, method = "api", files.per.chunk = 1)
maskCNV.BRCA <- GDCprepare(query = query.maskCNV.hg39.BRCA, summarizedExperiment = FALSE)
maskCNV.BRCA <- data.frame(maskCNV.BRCA, stringsAsFactors = FALSE)
library(CINmetrics)

tai.test <- tai(cnvData = maskCNV.BRCA)

head(tai.test)

## Modified Total Aberration Index

#*taiModified* calculates a modified Total Aberration Index using all sample values instead of those in aberrant copy number state, thus does not remove the directionality from the score.

modified.tai.test <- taiModified(cnvData = maskCNV_BRCA)
head(modified.tai.test)
## Copy Number Aberration
#*cna* calculates the total number of copy number aberrations (CNA; [Davidson JM, et. al.](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0079079)), defined as a segment with copy number outside the pre-defined range of 1.7-2.3 ($(\log_2 1.7 -1) \le \bar{y}_{S_i} \le (\log_2 2.3 -1)$) that is not contiguous with an adjacent independent CNA of identical copy number. For our purposes, we have adapted the range to be $|\bar{y}_{S_i}| \ge |\log_2 1.7|$, which is only slightly larger than the original. 
#This metric is very similar to the number of break points, but it comes with the caveat that adjacent segments need to have a difference in segmentation mean values.
cna.test <- cna(cnvData = maskCNV_BRCA)
head(cna.test)

## Counting Altered Base segments

#*countingBaseSegments* calculates the number of altered bases defined as the sums of the lengths of segments ($d_i$) with an absolute segment mean ($|\bar{y}_{S_i}|$) of greater than 0.2. 

#Biologically, this value can be thought to quantify numerical chromosomal instability. This is also a simpler representation of how much of the genome has been altered, and it does not run into the issue of sequencing coverage affecting the fraction of the genome altered.

base.seg.test <- countingBaseSegments(cnvData = maskCNV_BRCA)
head(base.seg.test)

## Counting Number of Break Points

#*countingBreakPoints* calculates the number of break points defined as the number of segments ($n_i$) with an absolute segment mean greater than 0.2. This is then doubled to account for the 5' and 3' break points. 

#Biologically, this value can be thought to quantify structural chromosomal instability. 


break.points.test <- countingBreakPoints(cnvData = maskCNV_BRCA)
head(break.points.test)

## Fraction of Genome Altered

#*fga* calculates the fraction of the genome altered (FGA; [Chin SF, et. al.](https://pubmed.ncbi.nlm.nih.gov/17925008/)), measured by taking the sum of the number of bases altered and dividing it by the genome length covered ($G$). Genome length covered was calculated by summing the lengths of each probe on the Affeymetrix 6.0 array. This calculation **excludes** sex chromosomes.

fraction.genome.test <- fga(cnvData = maskCNV_BRCA)
head(fraction.genome.test)

## CINmetrics
#*CINmetrics* calculates tai, cna, number of altered base segments, number of break points, and fraction of genome altered and returns them as a single data frame. 

cinmetrics.test <- CINmetrics(cnvData = maskCNV_BRCA)
head(cinmetrics.test)

write.csv(maskCNV_BRCA, file = "maskCNV_BRCA.csv")
write.csv(tai.test, file = "tai.test.csv")
write.csv(modified.tai.test, file = "modified.tai.test.csv")
write.csv(cna.test, file = "cna.test.csv")
write.csv(base.seg.test, file = "base.seg.test.csv")
write.csv(break.points.test, file = "break.points.test.csv")
write.csv(fraction.genome.test, file = "fraction.genome.test")
write.csv(cinmetrics.test, file = "cinmetrics.test")

#####
library(CINmetrics)
library(TCGAbiolinks)
library(tidyverse)
library(ggpubr)
library(corrplot)
library(ComplexHeatmap)
library(circlize)
library(cowplot)
library(grid)
library(gridExtra)

figure1 <- cinmetrics.data %>% mutate(value = log10(value)) %>% 
  ggstripchart(., x = "cinmetric",
               y = "value",
               combine = TRUE,
               #merge = TRUE,
               ylab = "",
               xlab = "",
               color = "type", 
               size = 0.5,
               fill = "type",
               font.label = c(10, "bold", "black"),
               #shape = "type",
               palette = "simpsons",
               alpha = 0.5,
               add = "mean_sd", add.params = list(size = 0.1, alpha = 1, group = "type", color = "black"), 
               orientation = "horiz",
               order = c("fga", "base_segments", "break_points", "cna", "modified_tai", "tai"),
               position = position_jitterdodge() 
  ) + font("xy.text", size = 10, color = "black", face = "bold")
